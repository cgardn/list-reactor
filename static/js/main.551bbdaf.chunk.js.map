{"version":3,"sources":["Todoboard.js","App.js","serviceWorker.js","index.js"],"names":["Itemmenu","props","className","autoFocus","style","top","posY","left","posX","onClick","onBlur","Editlabel","React","useState","canEdit","isEdit","onSubmit","event","preventDefault","setIsEdit","class","value","content","onFocus","target","select","onChange","id","Listitem","contextMenu","setContextMenu","draggable","onDragStart","data","JSON","stringify","itemId","dataTransfer","setData","pageX","pageY","String","fromCharCode","onDeleteClick","Todolist","dispatch","useContext","ListDispatchContext","isTitleEdit","setTitleEdit","changeItem","newContent","type","listId","payload","changeListTitle","thisClass","canEditTitle","list","title","canDelete","parse","getData","newData","fromListId","effectAllowed","onDragOver","handleDragOver","onDrop","console","log","items","map","item","index","key","fontsize","ni","getId","listReducer","state","action","filter","createContext","initialListState","Todoboard","useReducer","lists","nextItemId","setNextItemId","outId","removeList","listID","dayNames","Provider","hasTitle","width","length","nl","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.551bbdaf.chunk.js","sourcesContent":["import React from 'react';\nimport './Todoboard.css';\n\n// TODO-next steps\n//  - limit number of lists before bumping to next line\n//    - CSS issue, next line goes off the page - need to \n//      keep the app to viewport size since the lower-half\n//      list area is scrollable, but the whole page is not\n//  - resize the lower lists, they're huge\n//  - make 3-dots on listitems a lot smaller\n//  - center the lower lists also\n//  - make the addItemButtons into inputs that you type into\n//  - make the addList button larger, or in it's own place\n//    - possibly move up to header-toolbar when I get to that\n//  - reorganize code, remove stuff that doesn't need to be\n//    here and compartmentalize things that don't need to\n//    know about each other\n//    - can probably move drag-and-drop stuff into its own\n//      wrapper component\n//    - look at main Todoboard component, its huge\n// TODO-bugs\n//\n// TODO-things to remember to save when \n\n\nconst Itemmenu = (props) => {\n  return (\n    <button\n      className=\"item-menu\"\n      autoFocus={true}\n      style={{ top: props.posY, left: props.posX }}\n      onClick={props.onClick}\n      onBlur={props.onBlur}\n    >Delete</button>\n  );\n};\n\n\nconst Editlabel = (props) => {\n  // Editable label, a span that replaces itself with an Input box on click\n  const canEdit = React.useState(props.canEdit || true);\n\n  return (\n    <>\n    {props.isEdit === true\n      ? <form \n          onSubmit={event => {\n            event.preventDefault()\n            props.setIsEdit(false)}\n          }\n        >\n          <input\n            className={props.class}\n            value={props.content}\n            autoFocus={true}\n            onFocus={event => event.target.select()}\n            onChange={event => props.onChange(props.id, event.target.value)}\n            onBlur={event => props.setIsEdit(false)}\n          >\n          </input>\n        </form>\n      : <span \n          className={props.class}\n          onClick={event => props.setIsEdit(true)}\n        >{props.content}</span>\n    }\n    </>\n  );\n};\n\nconst Listitem = (props) => {\n  const [contextMenu, setContextMenu] = React.useState([0,0,false]);\n  const [isEdit, setIsEdit] = React.useState(true);\n\n  const handleDragStart = (event) => {\n    const data = JSON.stringify( {\n      itemId: props.id,\n      content: props.content\n    });\n    event.dataTransfer.setData('listItem', data);\n  };\n\n  return (\n    <div\n      className=\"list-item\"\n      draggable={isEdit ? \"false\" : \"true\"}\n      onDragStart={handleDragStart}\n    >\n      <Editlabel\n        class={\"list-item-objects list-item-label\"}\n        id={props.id}\n        content={props.content}\n        onChange={props.onChange}\n        isEdit={isEdit}\n        setIsEdit={setIsEdit}\n      />\n      <button\n        className=\"deleteItemButton list-item-objects\"\n        onClick={event => setContextMenu([event.pageX, event.pageY, !contextMenu[2]])}\n      >\n      {String.fromCharCode(9899) + ' ' + String.fromCharCode(9899) + ' ' + String.fromCharCode(9899)}\n      </button>\n      {contextMenu[2] && \n        <Itemmenu\n          posX={contextMenu[0]}\n          posY={contextMenu[1]}\n          onClick={props.onDeleteClick}\n          onBlur={event => setContextMenu([0,0,!contextMenu])}\n        />\n      }\n    </div>\n  );\n};\n\nconst Todolist = (props) => {\n  const dispatch = React.useContext(ListDispatchContext);\n  const [isTitleEdit, setTitleEdit] = React.useState(false);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();  \n  };\n\n  const handleDrop = (event) => {\n    const data = JSON.parse(event.dataTransfer.getData(\"listItem\"));\n\n    if (data.fromListId === props.id) {\n      console.log(\"same list, cancel drop\");\n      return;\n    };\n    dispatch({\n      type: 'ADD_TODO',\n      id: props.id,\n      payload: {id: data.itemId, content: data.content}\n    });\n    dispatch({\n      type: 'REMOVE_TODO',\n      listId: data.fromListId,\n      itemId: data.itemId,\n    });\n  };\n\n  const handleDragStart = (event) => {\n    const data = JSON.parse(event.dataTransfer.getData('listItem'));\n    const newData = JSON.stringify( {\n      ...data,\n      fromListId: props.id,\n    });\n    event.dataTransfer.effectAllowed = \"move\";\n    event.dataTransfer.setData('listItem', newData);\n  };\n\n  const changeItem = (id, newContent) => {\n    dispatch({\n      type: 'UPDATE_TODO',\n      listId: props.id,\n      itemId: id,\n      payload: newContent\n    });\n  };\n\n  const removeItem = (id) => {\n    dispatch({type: 'REMOVE_TODO', listId: props.id, itemId: id});\n  };\n\n  const newItem = (content) => {\n    return {\n      content: content,\n      id: props.getId(),\n    };\n  };\n\n  const handleAdditemClick = () => {\n    const ni = newItem(\"Click to edit\");\n    dispatch({type: 'ADD_TODO', id: props.id, payload: ni});\n  };\n\n  const changeListTitle = (id, content) => {\n    dispatch({\n      type: 'UPDATE_LIST_TITLE',\n      id: id,\n      payload: content\n    });\n  };\n\n  return (\n    <>\n      <div className={`${props.thisClass}-individual-title`}>\n      {props.canEditTitle ?\n        <Editlabel\n          class={\"\"}\n          id={props.list.id}\n          content={props.title}\n          onChange={changeListTitle}\n          isEdit={isTitleEdit}\n          setIsEdit={setTitleEdit}\n        />\n      : \n        <Editlabel\n          class={\"\"}\n          id={props.list.id}\n          content={props.title}\n          onChange={changeListTitle}\n          isEdit={false}\n          setIsEdit={() => {return;}}\n        />\n      }\n      \n      {props.canDelete &&\n        <button\n          className=\"list-delete-button\"\n          onClick={props.onDeleteClick}\n        >X</button>\n      }\n      </div>\n\n      <div className={`${props.thisClass}-list`}>\n        <div\n          className=\"list-content\"\n          onDragStart={handleDragStart}\n          onDragOver={event => handleDragOver(event)}\n          onDrop={handleDrop}\n        >\n          {props.list.items.map( (item, index) => (\n            <Listitem\n              key={item.id}\n              id={item.id}\n              content={item.content}\n              onChange={changeItem}\n              onDeleteClick={() => removeItem(item.id)}\n            />\n          ))}\n        </div>\n        <button\n          className={\"addItemButton\"}\n          style={{ fontsize: '2rem' }}\n          onClick={handleAdditemClick}\n        >{\"+\"}</button>\n      </div>\n    </>\n  );\n};\n\nconst listReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_TODO':\n      return state.map( list => {\n        if (list.id === action.id) {\n          return { ...list, items: [...list.items, action.payload]};\n        } else {\n          return list;\n        }\n      });\n    case 'REMOVE_TODO':\n      return state.map( list => {\n        if (list.id === action.listId) {\n          return { ...list, items: list.items.filter( item => item.id !== action.itemId)}\n        } else {\n          return list;\n        }\n      });\n    case 'UPDATE_TODO':\n      return state.map( list => {\n        if (list.id === action.listId) {\n          return {...list, items: list.items.map( item => {\n            if (item.id === action.itemId) {\n              return {...item, content: action.payload}\n            } else {\n              return item\n            }\n          })};\n        } else {\n          return list;\n        }});\n    case 'ADD_LIST':\n      return [ ...state, action.payload ];\n    case 'REMOVE_LIST':\n      return state.filter(list => list.id !== action.listId);\n    case 'UPDATE_LIST_TITLE':\n      return state.map( list => {\n        if (list.id === action.id) {\n          return { ...list, title: action.payload};\n        } else {\n          return list\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nconst ListDispatchContext = React.createContext(null);\nconst initialListState = [\n  {id: 'm', items: []},\n  {id: 't', items: []},\n  {id: 'w', items: []},\n  {id: 'r', items: []},\n  {id: 'f', items: []},\n  {id: 's', items: []},\n  {id: 'u', items: []},\n];\n\nconst Todoboard = (props) => {\n  const [lists, dispatch] = React.useReducer(listReducer, initialListState);\n  const [nextItemId, setNextItemId] = React.useState(0);\n\n  const getId = () => {\n    const outId = nextItemId;\n    setNextItemId(nextItemId + 1);\n    return outId;\n  };\n  \n  const newList = () => {\n    const outList = {\n      title: \"New List\",\n      id: getId(),\n      items: []\n    };\n    return outList;\n  };\n\n  const addList = () => {\n    const nl = newList();\n    dispatch({type: 'ADD_LIST', listId: nl.id, payload: nl});\n  };\n\n  const removeList = (listID) => {\n    dispatch({type: 'REMOVE_LIST', listId: listID, payload: null});\n  };\n\n  const dayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n  return (\n    <>\n    <ListDispatchContext.Provider value={dispatch}>\n    <div className=\"calendar\">\n      <div className=\"calendar-container\" >\n        {lists.map( (list, index) => (\n          (index <= 6) &&\n            <div className=\"calendar-individual\" key={index+1000}>\n              <>\n              <Todolist\n                thisClass={\"calendar\"}\n                hasTitle={false}\n                list={list}\n                title={dayNames[index]}\n                key={list.id}\n                id={list.id}\n                getId={getId}\n                canDelete={false}\n                canEditTitle={false}\n                onDeleteClick={() => removeList(list.id)}\n              />\n              </>\n            </div>\n        ))}\n      </div>\n    </div>\n    <hr style={{width: \"90vw\"}}/>\n    <div className=\"todo-container\">\n    {lists.length > 0 &&\n      <>\n      {lists.map( (list, index) => (\n        (index > 6) && \n        <div className=\"todo-individual\" key={index+100}>\n        <>\n        <Todolist\n          thisClass={\"todo\"}\n          hasTitle={false}\n          canDelete={true}\n          list={list}\n          title={list.title}\n          key={list.id}\n          id={list.id}\n          getId={getId} \n          canEditTitle={true}\n          onDeleteClick={() => removeList(list.id)}\n        />\n        </>\n        </div>\n      ))}\n      </>\n    }\n\n    <button\n      className=\"addListButton\"\n      onClick={addList}\n    >{\"+ Add list\"}</button>\n    </div>\n    </ListDispatchContext.Provider>\n    </>\n  )\n};\n\nexport default Todoboard;\n","import React from 'react';\nimport Todoboard from './Todoboard';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Todoboard />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}